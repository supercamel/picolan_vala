<?xml version="1.0"?>
<!-- picolan-1.0.gir generated by valac 0.46.3, do not modify. -->
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gee" version="0.8"/>
<include name="Gio" version="2.0"/>
<package name="picolan-1.0"/>
<c:include name="picolan.h"/>
<namespace name="picolan" version="1.0" c:prefix="picolan">
	<enumeration name="SOCKET_STATE" c:type="picolanSOCKET_STATE" glib:type-name="picolanSOCKET_STATE" glib:get-type="picolan_socket_state_get_type">
		<member name="closed" c:identifier="PICOLAN_SOCKET_STATE_CLOSED" value="0"/>
		<member name="syn_sent" c:identifier="PICOLAN_SOCKET_STATE_SYN_SENT" value="1"/>
		<member name="listening" c:identifier="PICOLAN_SOCKET_STATE_LISTENING" value="2"/>
		<member name="syn_recved" c:identifier="PICOLAN_SOCKET_STATE_SYN_RECVED" value="3"/>
		<member name="pending" c:identifier="PICOLAN_SOCKET_STATE_PENDING" value="4"/>
		<member name="open" c:identifier="PICOLAN_SOCKET_STATE_OPEN" value="5"/>
	</enumeration>
	<enumeration name="PicolanError" c:type="picolanPicolanError" glib:error-domain="picolan-picolan-error-quark">
		<member name="coms_fault" c:identifier="PICOLAN_PICOLAN_ERROR_COMS_FAULT" value="0"/>
		<member name="payload_too_big" c:identifier="PICOLAN_PICOLAN_ERROR_PAYLOAD_TOO_BIG" value="1"/>
	</enumeration>
	<class name="SocketStream" c:type="picolanSocketStream" glib:type-name="picolanSocketStream" glib:get-type="picolan_socket_stream_get_type" glib:type-struct="SocketStreamClass" parent="GObject.Object">
		<implements name="picolan.Socket"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="SocketStreamPrivate" c:type="picolanSocketStreamPrivate*"/>
		</field>
		<field name="timeout">
			<type name="guint" c:type="guint"/>
		</field>
		<field name="iface">
			<type name="picolan.Interface" c:type="picolanInterface*"/>
		</field>
		<field name="port">
			<type name="guint8" c:type="guint8"/>
		</field>
		<field name="state">
			<type name="picolan.SOCKET_STATE" c:type="picolanSOCKET_STATE"/>
		</field>
		<field name="sequence">
			<type name="guint8" c:type="guint8"/>
		</field>
		<field name="remote">
			<type name="guint8" c:type="guint8"/>
		</field>
		<field name="remote_sequence">
			<type name="guint8" c:type="guint8"/>
		</field>
		<field name="remote_port">
			<type name="guint8" c:type="guint8"/>
		</field>
		<field name="last_ack">
			<type name="guint8" c:type="guint8"/>
		</field>
		<method name="send_ack" c:identifier="picolan_socket_stream_send_ack" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="bind" c:identifier="picolan_socket_stream_bind">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="iface" transfer-ownership="none">
					<type name="picolan.Interface" c:type="picolanInterface*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="bind" invoker="bind">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="iface" transfer-ownership="none">
					<type name="picolan.Interface" c:type="picolanInterface*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<constructor name="new" c:identifier="picolan_socket_stream_new">
			<return-value transfer-ownership="full">
				<type name="picolan.SocketStream" c:type="picolanSocketStream*"/>
			</return-value>
		</constructor>
		<glib:signal name="recv-syn-signal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint8" c:type="guint8"/>
					</type>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="ack-signal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint8" c:type="guint8"/>
					</type>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="SocketStreamClass" c:type="picolanSocketStreamClass" glib:is-gtype-struct-for="SocketStream">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
		<field name="bind">
			<callback name="bind" c:type="bind">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="picolan.SocketStream" c:type="picolanSocketStream*"/>
					</parameter>
					<parameter name="iface" transfer-ownership="none">
						<type name="picolan.Interface" c:type="picolanInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="SocketStreamPrivate" c:type="picolanSocketStreamPrivate" disguised="1"/>
	<class name="Client" c:type="picolanClient" glib:type-name="picolanClient" glib:get-type="picolan_client_get_type" glib:type-struct="ClientClass" parent="picolan.SocketStream">
		<field name="parent_instance">
			<type name="picolan.SocketStream" c:type="picolanSocketStream"/>
		</field>
		<field name="priv">
			<type name="ClientPrivate" c:type="picolanClientPrivate*"/>
		</field>
		<constructor name="new" c:identifier="picolan_client_new">
			<return-value transfer-ownership="full">
				<type name="picolan.Client" c:type="picolanClient*"/>
			</return-value>
		</constructor>
	</class>
	<record name="ClientClass" c:type="picolanClientClass" glib:is-gtype-struct-for="Client">
		<field name="parent_class">
			<type name="picolan.SocketStreamClass" c:type="picolanSocketStreamClass"/>
		</field>
	</record>
	<record name="ClientPrivate" c:type="picolanClientPrivate" disguised="1"/>
	<class name="Datagram" c:type="picolanDatagram" glib:type-name="picolanDatagram" glib:get-type="picolan_datagram_get_type" glib:type-struct="DatagramClass" parent="GObject.Object">
		<implements name="picolan.Socket"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="DatagramPrivate" c:type="picolanDatagramPrivate*"/>
		</field>
		<field name="remote">
			<type name="guint8" c:type="guint8"/>
		</field>
		<field name="timeout">
			<type name="guint" c:type="guint"/>
		</field>
		<constructor name="new" c:identifier="picolan_datagram_new">
			<return-value transfer-ownership="full">
				<type name="picolan.Datagram" c:type="picolanDatagram*"/>
			</return-value>
			<parameters>
				<parameter name="_port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="send_bytes" c:identifier="picolan_datagram_send_bytes" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="dest" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint8" c:type="guint8"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="send_string" c:identifier="picolan_datagram_send_string" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="dest" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="str" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="DatagramClass" c:type="picolanDatagramClass" glib:is-gtype-struct-for="Datagram">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="DatagramPrivate" c:type="picolanDatagramPrivate" disguised="1"/>
	<class name="Interface" c:type="picolanInterface" glib:type-name="picolanInterface" glib:get-type="picolan_interface_get_type" glib:type-struct="InterfaceClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="InterfacePrivate" c:type="picolanInterfacePrivate*"/>
		</field>
		<field name="ttl">
			<type name="guint8" c:type="guint8"/>
		</field>
		<constructor name="new" c:identifier="picolan_interface_new">
			<return-value transfer-ownership="full">
				<type name="picolan.Interface" c:type="picolanInterface*"/>
			</return-value>
		</constructor>
		<method name="attach_socket" c:identifier="picolan_interface_attach_socket">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="s" transfer-ownership="none">
					<type name="picolan.Socket" c:type="picolanSocket*"/>
				</parameter>
			</parameters>
		</method>
		<method name="open" c:identifier="picolan_interface_open" throws="1">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="port_name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="baud" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="close" c:identifier="picolan_interface_close">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="set_address" c:identifier="picolan_interface_set_address" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="addr" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="send_datagram" c:identifier="picolan_interface_send_datagram" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="dest" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="data" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint8" c:type="guint8"/>
					</type>
				</parameter>
			</parameters>
		</method>
		<method name="ping" c:identifier="picolan_interface_ping">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="addr" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="guint" c:type="guint"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="ping_finish" c:identifier="picolan_interface_ping_finish" throws="1">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="subscribe" c:identifier="picolan_interface_subscribe" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="unsubscribe" c:identifier="picolan_interface_unsubscribe" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="on-close">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</glib:signal>
		<glib:signal name="on-datagram">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="src" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="dest" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="port" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
				<parameter name="payload" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint8" c:type="guint8"/>
					</type>
				</parameter>
			</parameters>
		</glib:signal>
	</class>
	<record name="InterfaceClass" c:type="picolanInterfaceClass" glib:is-gtype-struct-for="Interface">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="InterfacePrivate" c:type="picolanInterfacePrivate" disguised="1"/>
	<class name="AddressField" c:type="picolanAddressField" glib:type-name="picolanAddressField" glib:get-type="picolan_address_field_get_type" glib:type-struct="AddressFieldClass" glib:fundamental="1" glib:ref-func="picolan_address_field_ref" glib:unref-func="picolan_address_field_unref" glib:set-value-func="picolan_value_set_address_field" glib:get-value-func="picolan_value_get_address_field">
		<field name="parent_instance">
			<type name="GObject.TypeInstance" c:type="GTypeInstance"/>
		</field>
		<field name="ref_count">
			<type name="gint" c:type="volatile int"/>
		</field>
		<field name="priv">
			<type name="AddressFieldPrivate" c:type="picolanAddressFieldPrivate*"/>
		</field>
		<method name="set_address" c:identifier="picolan_address_field_set_address">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="addr" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_address" c:identifier="picolan_address_field_get_address">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="addr" transfer-ownership="none">
					<type name="guint8" c:type="guint8"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_bytes" c:identifier="picolan_address_field_get_bytes">
			<return-value transfer-ownership="full">
				<array length="0" c:type="guint8*">
					<type name="guint8" c:type="guint8"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="picolan_address_field_new">
			<return-value transfer-ownership="full">
				<type name="picolan.AddressField" c:type="picolanAddressField*"/>
			</return-value>
		</constructor>
	</class>
	<record name="AddressFieldClass" c:type="picolanAddressFieldClass" glib:is-gtype-struct-for="AddressField">
		<field name="parent_class">
			<type name="GObject.TypeClass" c:type="GTypeClass"/>
		</field>
	</record>
	<record name="AddressFieldPrivate" c:type="picolanAddressFieldPrivate" disguised="1"/>
	<interface name="Socket" c:type="picolanSocket" glib:type-name="picolanSocket" glib:get-type="picolan_socket_get_type" glib:type-struct="SocketIface">
		<prerequisite name="GObject.Object"/>
		<method name="get_port" c:identifier="picolan_socket_get_port">
			<return-value transfer-ownership="full">
				<type name="guint8" c:type="guint8"/>
			</return-value>
		</method>
		<virtual-method name="get_port" invoker="get_port">
			<return-value transfer-ownership="full">
				<type name="guint8" c:type="guint8"/>
			</return-value>
		</virtual-method>
		<method name="bind" c:identifier="picolan_socket_bind">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="iface" transfer-ownership="none">
					<type name="picolan.Interface" c:type="picolanInterface*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="bind" invoker="bind">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="iface" transfer-ownership="none">
					<type name="picolan.Interface" c:type="picolanInterface*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<glib:signal name="on-data">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="data" transfer-ownership="none">
					<type name="Gee.ArrayList" c:type="GeeArrayList*">
						<type name="guint8" c:type="guint8"/>
					</type>
				</parameter>
			</parameters>
		</glib:signal>
		<glib:signal name="on-destroy">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</glib:signal>
	</interface>
	<record name="SocketIface" c:type="picolanSocketIface" glib:is-gtype-struct-for="Socket">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_port">
			<callback name="get_port" c:type="get_port">
				<return-value transfer-ownership="full">
					<type name="guint8" c:type="guint8"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="picolan.Socket" c:type="picolanSocket*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="bind">
			<callback name="bind" c:type="bind">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="picolan.Socket" c:type="picolanSocket*"/>
					</parameter>
					<parameter name="iface" transfer-ownership="none">
						<type name="picolan.Interface" c:type="picolanInterface*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
</namespace>
</repository>
